<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapperInterface.ProductMapper">

  <select id="getAllProducts" resultType="com.example.demo.model.ProductDTO">
    SELECT 
      prod_no,
      prod_nm,
      prod_price,
      category,
      status,
      prod_cnt,
      publisher,
      author_nm,
      DATE_FORMAT(reg_dtm, '%Y-%m-%d %H:%i:%s') AS reg_dtm,
      DATE_FORMAT(upd_dtm, '%Y-%m-%d %H:%i:%s') AS upd_dtm,
      book_desc,
      suggest_yn
    FROM product
  </select>
  
	<insert id="insertProduct" useGeneratedKeys="true" keyProperty="prod_no">
	  INSERT INTO product
	    (prod_nm, prod_price, category, status, prod_cnt, publisher, author_nm, reg_dtm, book_desc, suggest_yn)
	  VALUES
	    (#{prod_nm}, #{prod_price}, #{category}, #{status}, #{prod_cnt}, #{publisher}, #{author_nm}, NOW(), #{book_desc}, #{suggest_yn})
	</insert>
  
	<select id="getProductById" parameterType="int" resultType="com.example.demo.model.ProductDTO">
	  SELECT 
	    prod_no,
	    prod_nm,
	    prod_price,
	    category,
	    status,
	    prod_cnt,
	    publisher,
	    author_nm,
	    DATE_FORMAT(reg_dtm, '%Y-%m-%d %H:%i:%s') AS reg_dtm,
	    DATE_FORMAT(upd_dtm, '%Y-%m-%d %H:%i:%s') AS upd_dtm,
	    book_desc,
	    suggest_yn
	  FROM product
	  WHERE prod_no = #{prod_no}
	</select>
	
	<update id="updateProduct" parameterType="com.example.demo.model.ProductDTO">
	  UPDATE product
	  SET
	    prod_nm = #{prod_nm},
	    prod_price = #{prod_price},
	    category = #{category},
	    status = #{status},
	    prod_cnt = #{prod_cnt},
	    publisher = #{publisher},
	    author_nm = #{author_nm},
	    upd_dtm = NOW(),
	    book_desc = #{book_desc},
	    suggest_yn = #{suggest_yn}
	  WHERE prod_no = #{prod_no}
	</update>

	
	<delete id="deleteProduct">
		DELETE FROM product where prod_no = #{prod_no}
	</delete>

	<!-- 상품 조회 [박민혁] -->
	<select id="ProList" parameterType="com.example.demo.model.SearchCondDTO" resultType="com.example.demo.model.ProductDTO">
	  SELECT p.prod_no, p.prod_nm, p.prod_price, p.publisher, p.author_nm, i.img_path FROM product p 
	  LEFT JOIN product_img i ON p.prod_no = i.prod_no AND i.img_class = '01'
	  WHERE p.status = '1'
	    <if test="category != null and category != ''">
	      AND p.category = #{category}
	    </if>
	    <if test="prod_nm != null and prod_nm != ''">
	      AND p.prod_nm LIKE CONCAT('%', #{prod_nm}, '%')
	    </if>
	    <if test="author_nm != null and author_nm != ''">
	      AND p.author_nm LIKE CONCAT('%', #{author_nm}, '%')
	    </if>
	</select>
	
	<!-- 추천 상품 조회 -->
	<select id="getSuggestProductList" resultType="map">
		SELECT p.prod_no
		     , p.category
		     , (select b.detail_nm from comm_cd a, comm_cd_detail b where a.cd_id = '104' and a.cd_id = b.cd_id and b.detail_cd = p.category LIMIT 1 ) as category_nm
		     , p.prod_nm
		     , prod_price
		     , prod_cnt
		     , publisher
		     , book_desc
		     , suggest_yn
		     , img_path
		     , CASE WHEN img_path IS NULL OR img_path = '' THEN ''
		            ELSE SUBSTRING_INDEX(img_path, '/', -1)
		        END AS img_file_nm
		  FROM PRODUCT p
		     , PRODUCT_IMG i 
		 WHERE 1=1
		   AND p.prod_no = i.prod_no
		   AND suggest_yn = 'Y'
		   AND status = '1'
	</select>
	
	<!-- 최신 상품 조회 -->
	<select id="getRecentProductList" resultType="map">
		SELECT p.prod_no
		     , p.category
		     , (select b.detail_nm from comm_cd a, comm_cd_detail b where a.cd_id = '104' and a.cd_id = b.cd_id and b.detail_cd = p.category LIMIT 1 ) as category_nm
		     , p.prod_nm
		     , prod_price
		     , prod_cnt
		     , publisher
		     , book_desc
		     , suggest_yn
		     , img_path
		     , CASE WHEN img_path IS NULL OR img_path = '' THEN ''
		            ELSE SUBSTRING_INDEX(img_path, '/', -1)
		        END AS img_file_nm
		     , author_nm
		     , reg_dtm
		  FROM PRODUCT p
		     , PRODUCT_IMG i 
		 WHERE 1=1
		   AND p.prod_no = i.prod_no
		   AND status = '1'
         order by REG_DTM desc
         limit 5
	</select>
	
	<update id="updateSuggestFlag">
        UPDATE product
        SET    suggest_yn = #{suggestYn}
        WHERE  prod_no    = #{prodNo}
    </update>
	
	
</mapper>